name: Build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
          - linux-arm64
          # - linux-32bit
          - linux-64bit
          - macos-arm64
          - macos-64bit
          - windows-64bit
          - windows-32bit
        include:
          - build: linux-arm64
            os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            archive-name: fast-down-linux-arm64
          # - build: linux-32bit
          #   os: ubuntu-latest
          #   target: i686-unknown-linux-gnu
          #   archive-name: fast-down-linux-32bit
          - build: linux-64bit
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive-name: fast-down-linux-64bit
          - build: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin
            archive-name: fast-down-macos-arm64
          - build: macos-64bit
            os: macos-latest
            target: x86_64-apple-darwin
            archive-name: fast-down-macos-64bit
          - build: windows-64bit
            os: windows-latest
            target: x86_64-pc-windows-msvc
            archive-name: fast-down-windows-64bit
          - build: windows-32bit
            os: windows-latest
            target: i686-pc-windows-msvc
            archive-name: fast-down-windows-32bit
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Make output folder
        run: |
          mkdir output
          cp fast-down-cli/config.ini output/

      - name: Copy target to folder (Windows)
        if: contains(matrix.build, 'windows')
        run: cp target/${{ matrix.target }}/release/fast-down.exe output

      - name: Copy target to folder (Non-Windows)
        if: ${{ !contains(matrix.build, 'windows') }}
        run: cp target/${{ matrix.target }}/release/fast-down output

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: output

      - name: Create ZIP (Windows)
        if: contains(matrix.build, 'windows')
        run: |
          cd output
          Compress-Archive -Path * -DestinationPath ../${{ matrix.archive-name }}.zip

      - name: Create ZIP (Non-Windows)
        if: ${{ !contains(matrix.build, 'windows') }}
        run: |
          cd output
          zip -r -9 ../${{ matrix.archive-name }}.zip *

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.archive-name }}.zip
